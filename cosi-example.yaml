apiVersion: apps/v1
kind: Deployment
metadata:
  name: spark-deployment
  namespace: mapreduce
  labels:
    app: spark
spec:
  replicas: 3
  selector:
    matchLabels:
      app: spark
  template:
    metadata:
      labels:
        app: spark
    spec:
      containers:
        - name: spark
          image: spark:2.4.5
          env:
            - S3_ENDPOINT: ''
            - GCS_ENDPOINT: ''
            - LOGS_BUCKET: ''
            - BACKUPS_BUCKET: ''
            - S3_ACCESS: 'S3_ACCESS_KEY'
            - S3_SECRET: 'S3_SECRET_KEY'
          ports:
            - containerPort: 80
  bucketClaimTemplates:
    - metadata:
        name: logs
      spec:
        accessModes: [ "WriteOnly" ]
        bucketClassName: "s3-class"
        env:
          - S3_ENDPOINT: "$(S3_ENDPOINT)"
          - LOGS_BUCKET: "$(S3_BUCKET)"
          - S3_ACCESS: "$(S3_ACCESS_KEY)"
          - S3_SECRET: "$(S3_SECRET_KEY)"
    - metadata:
        name: bigdata
        spec:
          accessModes: [ "ReadWrite" ]
          bucketClassName: "s3-class"
          env:
            - S3_ENDPOINT: "$(S3_ENDPOINT)"
            - BIGDATA_BUCKET: "$(S3_BUCKET)"
            - S3_ACCESS: "$(S3_ACCESS_KEY)"
            - S3_SECRET: "$(S3_SECRET_KEY)"
            - COMPLICATED_ENV_BAR: "https://$(S3_BUCKET).$(S3_HOST_NAME)"
    - metadata:
        name: backups
        spec:
          accessModes: [ "ReadWrite" ]
          bucketClassName: "gcs-class"
          env:
            - BACKUPS_ENDPOINT: "$(GCS_HOST_NAME)"
            - BACKUPS_BUCKET: "$(GCS_CONTAINER)"
            - BACKUPS_ACCESS: "$(GCS_ACCESS_KEY)"
            - BACKUPS_SECRET: "$(GCS_SECRET_KEY)"
          certs:
            - GCS_SA_JSON: /app/certs/


